plugins {
   // Apply the java plugin to add support for Java
   id 'java'
   id 'java-library'
   // Apply the application plugin to add support for building a CLI application
   id 'application'
}
repositories {
   // Use jcenter for resolving dependencies.
   // You can declare any Maven/Ivy/file repository here.
   jcenter()
}
dependencies {
   // This dependency is used by the application.
   implementation 'com.google.guava:guava:28.0-jre'   

   // Charting api/runtime
   api  group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
   // database/persistence
   api group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
   implementation group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa.modelgen', version: '2.4.2'
   implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.4'
   // DBMS
   implementation group: 'org.apache.derby', name: 'derby', version: '10.13.1.1'

// Use JUnit test framework
   testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'


//   testCompile 'org.junit.jupiter:junit-jupiter:5.5.2'
//    compile 'org.junit.jupiter:junit-jupiter:5.5.2'
}

application {
   // Define the main class for the application
   mainClassName = 'edu.touro.mco152.bm.App'
}

//sourceSets {
//    main {
//        java {
//            srcDir 'src'
//        }
//    }
//}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

jar {
   manifest {
       attributes 'Main-Class': 'edu.touro.mco152.bm.App'
   }
}

sourceSets  {
    // MJC this is need to make entity classes visible to the persistence scanner
    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir
}